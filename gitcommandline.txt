commande git
git config --global user.name "samuel taylor" #a changer pour tracabilité
git config --global user.email "samueldom.taylor@gmail.comé #changer l'email
git config --edit --global #get all config
code #ouvre code si code est dans le path
git config --global core.editor "code --wait --new-window" # param Code
git init #create new reporitory
git clone #download a project
git add #prepare a file
git commit #commit a file -m pour message et -am for add and commit message
git status # avoir le status
git add. #ajouter tout les files 
git log #get l'histo
#install ssh key 
ls -al ~/.ssh #SSH connectionsavoir si j'ai un ssh 
ssh-keygen -t rsa -b 4096 -C "samueldom.taylor@gmail.com" #create an ssh 
eval $(ssh-agent -s) # savoir si l'agent ssh run
ssh-add ~/.ssh/id_rsa # ajouter notre clée ssh local
ssh -T git@github.com
#commande line repositories
#commande line repositories
git clone #ajouter le lien du folder
git add. #ajouter les modificatons
git status #voir si tout a été pris en compte
git commit -m "commentaire" #preparer la release
git push origin main #push sur la main branch (origin mise en place en clonnant)
#ajout des commandes pull et fetch
git fetch #connection pour get la derniere v dans github
git status #te donne le status du merge
git pull #recupere et merge
#Readme file is written in markdown language, extesion => .md

git branch "branch name" #create a branche
git checkout -b "branch name" #connect to a branch pas besoin de la commande branch, la brnche est créé sil elle n'existe pas
git push -u "origin" "branch name" # ne pas oublier le u